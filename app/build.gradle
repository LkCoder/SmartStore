plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "net.luculent.smartstore"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    signingConfigs {
        debug {
            storeFile file("../smart_store.jks") // 需要修改成您的签名文件路径
            storePassword 'luculent1!'        // 需要修改成您的签名文件密码
            keyAlias 'smart_store'     // 需要修改成您的签名文件别名
            keyPassword 'luculent1!'          // 需要修改成您的签名文件别名密码
        }
        release {
            storeFile file("../smart_store.jks") // 需要修改成您的签名文件路径
            storePassword 'luculent1!'        // 需要修改成您的签名文件密码
            keyAlias 'smart_store'     // 需要修改成您的签名文件别名
            keyPassword 'luculent1!'          // 需要修改成您的签名文件别名密码
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            debuggable true
            jniDebuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name.contains("release")) {
            variant.outputs.all { output ->
                String time = new Date().format("yyyyMMdd-HHmm")
                outputFileName = "结算台_${variant.mergedFlavor.versionName}_${time}.apk"
            }
        }
    }
}

dependencies {
    implementation project(":lib_core")
    implementation project(":lib_api")
    implementation project(":lib_usb")
    implementation project(":lib_face")
}